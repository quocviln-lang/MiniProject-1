const express = require("express");
const Pin = require("../models/pin.js");
const router = express.Router();
const bcrypt = require("bcrypt");

// üü¢ L∆∞u ho·∫∑c c·∫≠p nh·∫≠t m√£ PIN (m√£ h√≥a)
router.post("/set", async (req, res) => {
  try {
    const { email, pin } = req.body;
    if (!email || !pin)
      return res.status(400).json({ success: false, message: "Thi·∫øu email ho·∫∑c PIN" });

    const hashed = await bcrypt.hash(String(pin), 10);

    let existing = await Pin.findOne({ email });
    if (existing) {
      existing.pin = hashed;
      await existing.save();
    } else {
      await Pin.create({ email, pin: hashed });
    }

    console.log("‚úÖ PIN ƒë√£ l∆∞u cho:", email);
    res.json({ success: true });
  } catch (err) {
    console.error("‚ùå L·ªói khi l∆∞u PIN:", err);
    res.status(500).json({ success: false, message: "L·ªói server" });
  }
});

// üîç Ki·ªÉm tra xem email c√≥ PIN ch∆∞a
router.get("/:email", async (req, res) => {
  try {
    const record = await Pin.findOne({ email: req.params.email });
    res.json({ hasPin: !!record });
  } catch (err) {
    console.error("‚ùå L·ªói khi ki·ªÉm tra PIN:", err);
    res.status(500).json({ hasPin: false });
  }
});

// üîí X√°c th·ª±c m√£ PIN
router.post("/verify", async (req, res) => {
  try {
    const { email, pin } = req.body;
    if (!email || !pin)
      return res.json({ valid: false, message: "Thi·∫øu d·ªØ li·ªáu" });

    const record = await Pin.findOne({ email });
    if (!record || !record.pin)
      return res.json({ valid: false, message: "Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi d√πng ho·∫∑c m√£ PIN tr·ªëng" });

    const isMatch = await bcrypt.compare(String(pin), record.pin);
    if (!isMatch) return res.json({ valid: false, message: "Sai m√£ PIN" });

    console.log("‚úÖ X√°c th·ª±c PIN th√†nh c√¥ng cho:", email);
    res.json({ valid: true });
  } catch (err) {
    console.error("‚ùå L·ªói x√°c th·ª±c PIN:", err);
    res.status(500).json({ valid: false, message: "L·ªói server" });
  }
});

module.exports = router;
